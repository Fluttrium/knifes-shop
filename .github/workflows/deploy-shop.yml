name: Deploy Shop to VPS

on:
  push:
    branches: [prod]

env:
  DEPLOY_PATH: /var/www/shop
  PROJECT_NAME: shop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean deployment directory and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Создаем директорию если не существует
            mkdir -p /var/www/shop
            
            # Переходим в директорию
            cd /var/www/shop
            
            # Останавливаем и удаляем старые контейнеры
            echo "=== Stopping and removing old containers ==="
            docker-compose -f docker-compose.shop.yml down --remove-orphans || true
            
            # Очищаем все неиспользуемые Docker ресурсы
            echo "=== Cleaning Docker resources ==="
            docker system prune -a -f
            docker volume prune -f
            
            # Удаляем старые файлы проекта
            echo "=== Cleaning project directory ==="
            rm -rf ./*
            rm -rf ./.[!.]*

      - name: Copy files to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "./"
          target: "/var/www/shop"
          timeout: 180s

      - name: Build and start containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /var/www/shop
            
            # Проверяем наличие docker-compose.shop.yml
            if [ ! -f "docker-compose.shop.yml" ]; then
              echo "❌ ERROR: docker-compose.shop.yml not found!"
              ls -la
              exit 1
            fi
            
            echo "✓ docker-compose.shop.yml found"
            
            # Показываем использование диска
            echo "=== Disk usage before build ==="
            df -h
            
            # Собираем все с Turborepo внутри Docker
            echo "=== Building containers with Turborepo ==="
            if ! docker-compose -f docker-compose.shop.yml build --no-cache; then
              echo "❌ Build failed!"
              exit 1
            fi
            
            # Запускаем контейнеры
            echo "=== Starting containers ==="
            if ! docker-compose -f docker-compose.shop.yml up -d; then
              echo "❌ Failed to start containers!"
              docker-compose -f docker-compose.shop.yml logs
              exit 1
            fi
            
            echo "✓ Containers started successfully"

      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /var/www/shop
            
            # Ждем инициализации контейнеров
            echo "=== Waiting for containers to initialize ==="
            sleep 30
            
            # Проверяем статус контейнеров
            echo "=== Container status ==="
            docker-compose -f docker-compose.shop.yml ps
            
            # Проверяем что контейнеры действительно запущены
            RUNNING_COUNT=$(docker-compose -f docker-compose.shop.yml ps | grep "Up" | wc -l)
            TOTAL_SERVICES=$(docker-compose -f docker-compose.shop.yml config --services | wc -l)
            
            echo "Running containers: $RUNNING_COUNT / $TOTAL_SERVICES"
            
            if [ $RUNNING_COUNT -eq 0 ]; then
              echo "❌ ERROR: No containers are running!"
              echo "=== Container logs ==="
              docker-compose -f docker-compose.shop.yml logs --tail=100
              exit 1
            elif [ $RUNNING_COUNT -lt $TOTAL_SERVICES ]; then
              echo "⚠️ WARNING: Not all containers are running"
              echo "=== Logs for troubleshooting ==="
              docker-compose -f docker-compose.shop.yml logs --tail=50
            else
              echo "✅ All containers are running!"
            fi
            
            # Финальная очистка после запуска
            docker system prune -f
            
            echo "=== Running containers ==="
            docker ps
            
            echo "=== Final disk usage ==="
            df -h
            
            echo "=== Deployment completed ==="
