version: '3.8'

services:
  # API сервер
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: runner
    container_name: shop_api_prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://shopUser:3Mu%3Cas%3E%3D8HE-X%5C@185.211.170.182:5432/shop
      SHADOW_DATABASE_URL: postgresql://shopUser:3Mu%3Cas%3E%3D8HE-X%5C@185.211.170.182:5432/shop_shadow
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      YOO_KASSA_SHOP_ID: ${YOO_KASSA_SHOP_ID}
      YOO_KASSA_SECRET_KEY: ${YOO_KASSA_SECRET_KEY}
      YOO_KASSA_API_URL: ${YOO_KASSA_API_URL}
      FRONTEND_URL: http://92.118.114.147:1488
    expose:
      - "1488"
    networks:
      - shop_network
    volumes:
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1488/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Web приложение
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: runner
    container_name: shop_web_prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://92.118.114.147:1488/api
    expose:
      - "3000"
    networks:
      - shop_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.75'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: shop_nginx_prod
    restart: unless-stopped
    ports:
      - "1488:80"
      - "1443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
      - api
    networks:
      - shop_network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

volumes:
  uploads_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  shop_network:
    driver: bridge
