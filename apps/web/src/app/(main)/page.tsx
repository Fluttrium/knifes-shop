import { Container } from "@/components/shared/container";
import { Title } from "@/components/shared/title";
import { ProductsGroupList } from "@/components/shared/products-group-list";
import { TopBar } from "@/components/shared/top-bar";
import { Stories } from "@/components/shared/stories";
import { Filters } from "@/components/shared/filters";
import { Suspense } from "react";
import api, { Category } from "@repo/api-client";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–µ—Ä–µ–∑ API –∫–ª–∏–µ–Ω—Ç
async function getAllCategories(): Promise<Category[]> {
  try {
    console.log("üìÇ Fetching categories via API client...");
    const categories = await api.products.getCategories();
    console.log(`‚úÖ Fetched ${categories.length} categories via API client`);
    return categories;
  } catch (error) {
    console.error("‚ùå Error fetching categories via API client:", error);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function getCategoriesWithCounts(): Promise<Category[]> {
  try {
    const categories = await getAllCategories();

    // –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
    const categoriesWithCounts = await Promise.all(
      categories.map(async (category) => {
        try {
          const response = await api.products.getProducts({
            categoryId: category.id,
            limit: 1,
          });
          return {
            ...category,
            productsCount: response.total || 0,
          };
        } catch (error) {
          console.error(
            `Error fetching count for category ${category.id}:`,
            error,
          );
          return {
            ...category,
            productsCount: 0,
          };
        }
      }),
    );

    return categoriesWithCounts.filter((cat) => cat.productsCount > 0);
  } catch (error) {
    console.error("‚ùå Error fetching categories with counts:", error);
    return [];
  }
}

export default async function Home() {
  // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–æ–≤
  const categories = await getCategoriesWithCounts();

  return (
    <>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –æ—Ç—Å—Ç—É–ø–æ–º —Å–ª–µ–≤–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
      <Container className="mt-10 pl-4 md:pl-0">
        <Title text="–ú–∞–≥–∞–∑–∏–Ω –Ω–æ–∂–µ–π" size="lg" className="font-extrabold" />
        <p className="text-gray-600 mt-2">
          –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–æ–∂–∏ –¥–ª—è –∫—É—Ö–Ω–∏, –æ—Ö–æ—Ç—ã –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        </p>
      </Container>

      {/* TopBar —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö */}
      <Container className="mt-4 sticky top-0 bg-white z-10 shadow-md">
        <div className="overflow-x-auto pl-4 md:pl-0">
          <TopBar categories={categories} />
        </div>
      </Container>

      {/* Stories —Å –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö */}
      <Container className="mt-10">
        <div className="overflow-x-auto pl-4 md:pl-0">
          <Stories />
        </div>
      </Container>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <Container className="mt-10 pb-14">
        <div className="flex flex-col lg:flex-row gap-[80px]">
          {/* –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å –æ—Ç—Å—Ç—É–ø–æ–º —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
          <div className="w-full lg:w-[250px] pl-4 pr-4 md:pl-0 md:pr-0">
            <Suspense
              fallback={
                <div className="h-96 bg-gray-100 animate-pulse rounded-lg" />
              }
            >
              <Filters />
            </Suspense>
          </div>

          {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–∫—Ä–æ–ª–ª–æ–º –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div className="flex-1">
            <div className="flex flex-col gap-16">
              {categories.map((category) => (
                <div key={category.id}>
                  <div className="pl-4 md:pl-0">
                    <ProductsGroupList
                      title={category.name}
                      categoryId={category.id}
                    />
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </Container>
    </>
  );
}
