version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: shop_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: shop_db
      POSTGRES_USER: shop_user
      POSTGRES_PASSWORD: shop_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/api/prisma/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - shop_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shop_user -d shop_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API сервер
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: runner
    container_name: shop_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://shop_user:shop_password@postgres:5432/shop_db
      SHADOW_DATABASE_URL: postgresql://shop_user:shop_password@postgres:5432/shop_db_shadow
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      YOO_KASSA_SHOP_ID: 1141146
      YOO_KASSA_SECRET_KEY: test_f2hyIK-uYBoIvSEmjUpkOoljhWOauazQfzUG_v1bPmc
      YOO_KASSA_API_URL: https://api.yookassa.ru/v3
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - shop_network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web приложение
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: runner
    container_name: shop_web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - shop_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: shop_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
    networks:
      - shop_network

volumes:
  postgres_data:
    driver: local

networks:
  shop_network:
    driver: bridge
